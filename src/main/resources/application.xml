<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- 根据注解将需要管理的bean自动扫描到ioc中，将切面类也加上相应的注解 -->
    <context:component-scan base-package="com.fang.doit"></context:component-scan>

    <import resource="spring-mybatis.xml"/>

    <!-- 开启基于注解的aop功能 -->
    <aop:aspectj-autoproxy />


    <!--<bean id="logAdvice" class="com.controller.spring.aop.advises.BeforeLogAdvise"></bean>-->


    <!--&lt;!&ndash;使用spring代理工厂定义一个代理，通过他访问业务类中的方法。在使用的时候我们都需要helloServiceProxy这个bean&ndash;&gt;-->
    <!--<bean id="helloServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--&lt;!&ndash;指定代理接口&ndash;&gt;-->
    <!--&lt;!&ndash;  <property name="proxyInterfaces">-->
    <!--<value>com.controller.spring.aop.service.HelloService</value>-->
    <!--</property> &ndash;&gt;-->
    <!--&lt;!&ndash;指定通知&ndash;&gt;-->
    <!--<property name="interceptorNames">-->
    <!--<list>-->
    <!--<value>logAdvice</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--&lt;!&ndash;指定目标对象&ndash;&gt;-->
    <!--<property name="target" ref="helloServiceImpl"></property>-->
    <!--</bean>-->

    <!--<bean class="com.controller.spring.ioc.extend.processor.test2.Apples" id="apples">-->
        <!--<property name="color" value="black"></property>-->
    <!--</bean>-->


</beans>