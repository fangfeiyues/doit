package com.fang.doit.design.scene.ant;

public class AntScene {

    // 蚂蚁一面场景题，准备15道！！


    // 1、设计双11支付&交易的最终一致性方案
    /**
     * 场景：支付成功: 更新订单状态 -> 扣减库存 -> 增加商家余额，要求99.99%成功率
     *
     * 1、采用TCC模式（Try-Confirm-Cancel）：Try阶段预冻结库存/余额，Confirm阶段异步执行更新，失败则触发Cancel回滚
     * 2、结合RocketMQ事务消息：支付成功消息入队，消费者幂等处理下游服务，消息堆积时动态扩容消费者
     * 3、降级策略：峰值期将库存扣减改为缓存预扣减（Redis+Lua），峰后同步DB
     */


     // 2、余额与优惠券并发的超卖问题
     /**
     * 场景：用户同时使用余额和红包支付，余额充足但红包数量有限。
     * 解答：
     * 分资源隔离锁：余额扣减用用户级乐观锁，红包库存用Redis分布式锁（Redisson WatchDog续期）10
     * 事务编排：先扣非稀缺资源（余额），再扣红包（失败则回滚余额），避免红包占用失效
     */


     // 3、设计全球支付网络的汇率服务
    /**
     * 要求：支持实时汇率转换（精度0.0001）、高并发查询（QPS>10万）、强一致性。
     * 方案：
     * 多级缓存：本地缓存（Caffeine）加载分布式缓存（Tair）的基准汇率，波动区间内直接计算7
     * 数据分片：按币种对分库（TDDL），主库写Binlog同步从库，跨币种交易走二阶段提交39
     * 容灾：配置中心（AntConfig）动态切换备用汇率源（如路透→彭博）
     */


    // 4、支付路由的智能调度
    // @see com.fang.doit.design.scene.ant.PaymentChannel
    /**
     * 场景：根据银行通道成本、成功率、延迟动态选择最优支付通道。
     * 策略：
     * 实时权重计算：基于QPS、RT、错误率（Sentinel滑动窗口）动态调整通道优先级1
     * 离线训练模型：用历史数据拟合通道质量预测（如XGBoost），在线推理匹配策略5
     * 灰度放量：新通道从1%流量开始，成功率>99.5%全量
     */

    // 或者
    /**
     * 用户有多种支付方式(余额、红包、优惠券，代金券等)，
     * 假如每种支付方式需要通过实时调用远程服务获取可用性在外部资源环境不变情况下，
     * 请设计程序以最短响应时间获得尽可能多的可用支付方式列表。
     */


    // --- 不是写代码的，是线上问题解决方案 --

    // 5、支付核心链路的JVM调优
    /**
     * 场景：大促期间支付服务频繁Full GC（CMS失败）。
     * 解决：
     * G1替代CMS：设置-XX:+UseG1GC，MaxGCPauseMillis=200ms8
     * 堆外内存管控：Netty的DirectBuffer通过-XX:MaxDirectMemorySize限制，防OOM5
     * 监控联动：ARMS监控GC日志，自动触发线程Dump分析
     */


    // 6、数据库死锁检测与自动化解
    /**
     * 场景：用户并发支付导致MySQL死锁（Error 1213）。
     * 方案：
     * 锁细化：将UPDATE account SET balance=balance-?拆分为分段锁（按user_id分16段）10
     * 重试中间件：基于Seata AT模式自动重试事务（最大尝试3次
     */





}
